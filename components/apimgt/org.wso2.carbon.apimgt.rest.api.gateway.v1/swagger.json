{
  "swagger" : "2.0",
  "info" : {
    "description" : "This document specifies a **RESTful API** for WSO2 **API Manager** - Gateway.\nPlease see [full swagger definition](https://raw.githubusercontent.com/wso2/carbon-apimgt/v6.7.206/components/apimgt/org.wso2.carbon.apimgt.rest.api.gateway.v1/src/main/resources/gateway-api.yaml) of the API which is written using [swagger 2.0](http://swagger.io/) specification.\n",
    "version" : "v1",
    "title" : "WSO2 API Manager - Gateway",
    "contact" : {
      "name" : "WSO2",
      "url" : "http://wso2.com/products/api-manager/",
      "email" : "architecture@wso2.com"
    },
    "license" : {
      "name" : "Apache 2.0",
      "url" : "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host" : "apis.wso2.com",
  "basePath" : "/api/am/gateway/v1",
  "schemes" : [ "https" ],
  "consumes" : [ "application/json" ],
  "produces" : [ "application/json" ],
  "paths" : {
    "/redeploy-api" : {
      "post" : {
        "tags" : [ "ReDeploy API" ],
        "summary" : "Re Deploy the API in the gateway",
        "description" : "This operation is used to re deploy an API in the gateway. If the Tenant domain is not provided carbon.super\nwill be picked as the Tenant domain.\n",
        "parameters" : [ {
          "name" : "apiName",
          "in" : "query",
          "description" : "Name of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "version of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantDomain",
          "in" : "query",
          "description" : "Tenant Domain of the API\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.\nAPI successfully deployed in the Gateway.\n",
            "schema" : {
              "$ref" : "#/definitions/DeployResponse"
            }
          },
          "400" : {
            "description" : "Bad Request. Invalid request or validation error.",
            "examples" : {
              "application/json" : {
                "code" : 400,
                "message" : "Bad Request",
                "description" : "Invalid request or validation error",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Not Found. The specified resource does not exist.",
            "examples" : {
              "application/json" : {
                "code" : 404,
                "message" : "Not Found",
                "description" : "The specified resource does not exist",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "\"curl -k -X POST \"https://127.0.0.1:9443/api/am/gateway/v1/redeploy-api?apiName=PizzaAPI&version=1.0&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
        } ]
      }
    },
    "/undeploy-api" : {
      "post" : {
        "tags" : [ "Undeploy API" ],
        "summary" : "Uneploy the API from the gateway",
        "description" : "This operation is used to undeploy an API from the gateway. If the Tenant domain is not provided carbon.super will\nbe picked as the Tenant domain.\n",
        "parameters" : [ {
          "name" : "apiName",
          "in" : "query",
          "description" : "Name of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "version of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantDomain",
          "in" : "query",
          "description" : "Tenant Domain of the API\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.\nAPI successfully undeployed from the Gateway.\n",
            "schema" : {
              "$ref" : "#/definitions/DeployResponse"
            }
          },
          "400" : {
            "description" : "Bad Request. Invalid request or validation error.",
            "examples" : {
              "application/json" : {
                "code" : 400,
                "message" : "Bad Request",
                "description" : "Invalid request or validation error",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Not Found. The specified resource does not exist.",
            "examples" : {
              "application/json" : {
                "code" : 404,
                "message" : "Not Found",
                "description" : "The specified resource does not exist",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "\"curl -k -X POST \"https://127.0.0.1:9443/api/am/gateway/v1/undeploy-api?apiName=PizzaAPI&version=1.0&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
        } ]
      }
    },
    "/api-artifact" : {
      "get" : {
        "tags" : [ "Get API Artifacts" ],
        "summary" : "Get API synapse definition artifact from the storage",
        "description" : "This operation is used to get the API synapse definition from the storage. If the Tenant domain\nis not provided carbon.super will be picked as the Tenant domain.\n",
        "parameters" : [ {
          "name" : "apiName",
          "in" : "query",
          "description" : "Name of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "version of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantDomain",
          "in" : "query",
          "description" : "Tenant Domain of the API\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.\nAPI artifact successfully retrieved from the storage.\n",
            "schema" : {
              "$ref" : "#/definitions/API"
            }
          },
          "400" : {
            "description" : "Bad Request. Invalid request or validation error.",
            "examples" : {
              "application/json" : {
                "code" : 400,
                "message" : "Bad Request",
                "description" : "Invalid request or validation error",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Not Found. The specified resource does not exist.",
            "examples" : {
              "application/json" : {
                "code" : 404,
                "message" : "Not Found",
                "description" : "The specified resource does not exist",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "\"curl -k -X GET \"https://127.0.0.1:9443/api/am/gateway/v1/api-artifact?apiName=PizzaAPI&version=1.0&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
        } ]
      }
    },
    "/local-entry" : {
      "get" : {
        "tags" : [ "Get API Artifacts" ],
        "summary" : "Get Local Entry from the storage",
        "description" : "This operation is used to get local entry from the storage.If the Tenant domain is not provided carbon.super\nwill be picked as the Tenant domain.\n",
        "parameters" : [ {
          "name" : "apiName",
          "in" : "query",
          "description" : "Name of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "version of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantDomain",
          "in" : "query",
          "description" : "Tenant Domain of the API\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.\nLocal entry for the API successfully retrieved from the storage.\n",
            "schema" : {
              "$ref" : "#/definitions/LocalEntry"
            }
          },
          "400" : {
            "description" : "Bad Request. Invalid request or validation error.",
            "examples" : {
              "application/json" : {
                "code" : 400,
                "message" : "Bad Request",
                "description" : "Invalid request or validation error",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Not Found. The specified resource does not exist.",
            "examples" : {
              "application/json" : {
                "code" : 404,
                "message" : "Not Found",
                "description" : "The specified resource does not exist",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "\"curl -k -X GET \"https://127.0.0.1:9443/api/am/gateway/v1/local-entry?apiName=PizzaAPI&version=1.0&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
        } ]
      }
    },
    "/sequence" : {
      "get" : {
        "tags" : [ "Get API Artifacts" ],
        "summary" : "Get sequences from the storage",
        "description" : "This operation is used to get the API sequence from the storage. If the Tenant domain is not provided carbon.super\nwill be picked as the Tenant domain.\n",
        "parameters" : [ {
          "name" : "apiName",
          "in" : "query",
          "description" : "Name of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "version of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantDomain",
          "in" : "query",
          "description" : "Tenant Domain of the API\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.\nSequences for the API successfully retrieved from the storage.\n",
            "schema" : {
              "$ref" : "#/definitions/Sequences"
            }
          },
          "400" : {
            "description" : "Bad Request. Invalid request or validation error.",
            "examples" : {
              "application/json" : {
                "code" : 400,
                "message" : "Bad Request",
                "description" : "Invalid request or validation error",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Not Found. The specified resource does not exist.",
            "examples" : {
              "application/json" : {
                "code" : 404,
                "message" : "Not Found",
                "description" : "The specified resource does not exist",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "\"curl -k -X POST \"https://127.0.0.1:9443/api/am/gateway/v1/sequence?apiName=PizzaAPI&version=1.0&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
        } ]
      }
    },
    "/end-points" : {
      "get" : {
        "tags" : [ "Get API Artifacts" ],
        "summary" : "Get end-points from the storage for the API",
        "description" : "This operation is used to get the end-points from the storage. If the Tenant domain is not provided\ncarbon.super will be picked as the Tenant domain.\n",
        "parameters" : [ {
          "name" : "apiName",
          "in" : "query",
          "description" : "Name of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "version of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantDomain",
          "in" : "query",
          "description" : "Tenant Domain of the API\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.\nEnd-points successfully retrieved from the storage for the API.\n",
            "schema" : {
              "$ref" : "#/definitions/Endpoints"
            }
          },
          "400" : {
            "description" : "Bad Request. Invalid request or validation error.",
            "examples" : {
              "application/json" : {
                "code" : 400,
                "message" : "Bad Request",
                "description" : "Invalid request or validation error",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Not Found. The specified resource does not exist.",
            "examples" : {
              "application/json" : {
                "code" : 404,
                "message" : "Not Found",
                "description" : "The specified resource does not exist",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "\"curl -k -X POST \"https://127.0.0.1:9443/api/am/gateway/v1/end-points?apiName=PizzaAPI&version=1.0&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
        } ]
      }
    },
    "/apis" : {
      "get" : {
        "tags" : [ "Get API Info" ],
        "summary" : "Get the subscription information of an api by providing the api name, version and context.",
        "description" : "This operation is used to get the subscription information of an API from storage. If the Tenant domain is not provided\ncarbon.super will be picked as the Tenant domain.\n",
        "parameters" : [ {
          "name" : "context",
          "in" : "query",
          "description" : "Context of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "version",
          "in" : "query",
          "description" : "version of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantDomain",
          "in" : "query",
          "description" : "Tenant Domain of the API\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.\nEnd-points successfully retrieved from the storage for the API.\n",
            "schema" : {
              "$ref" : "#/definitions/APIList"
            }
          },
          "400" : {
            "description" : "Bad Request. Invalid request or validation error.",
            "examples" : {
              "application/json" : {
                "code" : 400,
                "message" : "Bad Request",
                "description" : "Invalid request or validation error",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Not Found. The specified resource does not exist.",
            "examples" : {
              "application/json" : {
                "code" : 404,
                "message" : "Not Found",
                "description" : "The specified resource does not exist",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "\"curl -k -X POST \"https://127.0.0.1:9443/api/am/gateway/v1/apis?apiName=PizzaAPI&version=1.0&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
        } ]
      }
    },
    "/apis/{apiId}" : {
      "get" : {
        "tags" : [ "Get API Info" ],
        "summary" : "Get the subscription information of an api by providing the api name, version and context.",
        "description" : "This operation is used to get the subscription information of an API from storage. If the Tenant domain is not provided\ncarbon.super will be picked as the Tenant domain.\n",
        "parameters" : [ {
          "name" : "apiId",
          "in" : "path",
          "description" : "API ID of the API\n",
          "required" : true,
          "type" : "string"
        }, {
          "name" : "tenantDomain",
          "in" : "query",
          "description" : "Tenant Domain of the API\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.\nEnd-points successfully retrieved from the storage for the API.\n",
            "schema" : {
              "$ref" : "#/definitions/APIInfo"
            }
          },
          "400" : {
            "description" : "Bad Request. Invalid request or validation error.",
            "examples" : {
              "application/json" : {
                "code" : 400,
                "message" : "Bad Request",
                "description" : "Invalid request or validation error",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Not Found. The specified resource does not exist.",
            "examples" : {
              "application/json" : {
                "code" : 404,
                "message" : "Not Found",
                "description" : "The specified resource does not exist",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "\"curl -k -X POST \"https://127.0.0.1:9443/api/am/gateway/v1/apis/7a2298c4-c905-403f-8fac-38c73301631f?tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
        } ]
      }
    },
    "/applications" : {
      "get" : {
        "tags" : [ "Get Application Info" ],
        "summary" : "Get the Application meta information of an api by providing the api name, version and context.",
        "description" : "This operation is used to get the subscription information of an API from storage. If the Tenant domain is not provided\ncarbon.super will be picked as the Tenant domain.\n",
        "parameters" : [ {
          "name" : "name",
          "in" : "query",
          "description" : "Name of the Application\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "uuid",
          "in" : "query",
          "description" : "UUID of the Application\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tenantDomain",
          "in" : "query",
          "description" : "Tenant Domain of the Application\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.\nEnd-points successfully retrieved from the storage for the API.\n",
            "schema" : {
              "$ref" : "#/definitions/ApplicationList"
            }
          },
          "400" : {
            "description" : "Bad Request. Invalid request or validation error.",
            "examples" : {
              "application/json" : {
                "code" : 400,
                "message" : "Bad Request",
                "description" : "Invalid request or validation error",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Not Found. The specified resource does not exist.",
            "examples" : {
              "application/json" : {
                "code" : 404,
                "message" : "Not Found",
                "description" : "The specified resource does not exist",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "\"curl -k -X POST \"https://127.0.0.1:9443/api/am/gateway/v1/applications?name=PizzaAPpp&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
        } ]
      }
    },
    "/subscriptions" : {
      "get" : {
        "tags" : [ "Get Subscription Info" ],
        "summary" : "Get the subscriptions meta information of an api by providing the api name, version and context.",
        "description" : "This operation is used to get the subscription information of an API from storage. If the Tenant domain is not provided\ncarbon.super will be picked as the Tenant domain.\n",
        "parameters" : [ {
          "name" : "apiUUID",
          "in" : "query",
          "description" : "UUID of the API\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "appUUID",
          "in" : "query",
          "description" : "UUID of the Application\n",
          "required" : false,
          "type" : "string"
        }, {
          "name" : "tenantDomain",
          "in" : "query",
          "description" : "Tenant Domain of the Application\n",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "OK.\nEnd-points successfully retrieved from the storage for the API.\n",
            "schema" : {
              "$ref" : "#/definitions/Subscription"
            }
          },
          "400" : {
            "description" : "Bad Request. Invalid request or validation error.",
            "examples" : {
              "application/json" : {
                "code" : 400,
                "message" : "Bad Request",
                "description" : "Invalid request or validation error",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          },
          "404" : {
            "description" : "Not Found. The specified resource does not exist.",
            "examples" : {
              "application/json" : {
                "code" : 404,
                "message" : "Not Found",
                "description" : "The specified resource does not exist",
                "moreInfo" : "",
                "error" : [ ]
              }
            },
            "schema" : {
              "$ref" : "#/definitions/Error"
            }
          }
        },
        "x-code-samples" : [ {
          "lang" : "Curl",
          "source" : "\"curl -k -X POST \"https://127.0.0.1:9443/api/am/gateway/v1/subscriptions?apiUUID=d290f1ee-6c54-4b01-90e6-d701748f0851&appUUID=d290f1ee-6c54-4b01-90e6-d701748f0851&tenantDomain=registry.com\\\" -H \"Authorization: Basic YWRtaW46YWRtaW4=\""
        } ]
      }
    }
  },
  "definitions" : {
    "APIInfo" : {
      "properties" : {
        "apiUUID" : {
          "type" : "string",
          "description" : "UUID of API."
        },
        "apiId" : {
          "type" : "integer"
        },
        "provider" : {
          "type" : "string",
          "description" : "API Provider name."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the API"
        },
        "version" : {
          "type" : "string",
          "description" : "Version of the API."
        },
        "context" : {
          "type" : "string",
          "description" : "Context of the API."
        },
        "policy" : {
          "type" : "string",
          "description" : "API level throttling policy."
        },
        "apiType" : {
          "type" : "string",
          "example" : "APIProduct",
          "description" : "Type of the API."
        },
        "isDefaultVersion" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether this is the default version of the API."
        },
        "urlMappings" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/URLMapping"
          }
        },
        "subscripitons" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/SubscriptionInfo"
          }
        }
      },
      "title" : "Subscription Information for API."
    },
    "SubscriptionInfo" : {
      "properties" : {
        "subscriptionUUID" : {
          "type" : "string"
        },
        "subscriptionPolicy" : {
          "type" : "string"
        },
        "status" : {
          "type" : "string"
        },
        "application" : {
          "$ref" : "#/definitions/ApplicationInfo"
        }
      }
    },
    "ApplicationInfo" : {
      "properties" : {
        "uuid" : {
          "type" : "string"
        },
        "id" : {
          "type" : "integer"
        },
        "name" : {
          "type" : "string"
        },
        "subName" : {
          "type" : "string"
        },
        "policy" : {
          "type" : "string",
          "description" : "Application level throtting policy."
        },
        "tokenType" : {
          "type" : "string",
          "example" : "JWT",
          "description" : "type of the token."
        },
        "attributes" : {
          "type" : "object",
          "additionalProperties" : {
            "type" : "string"
          }
        },
        "keys" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationKeyMapping"
          }
        }
      }
    },
    "ApplicationKeyMapping" : {
      "properties" : {
        "consumerKey" : {
          "type" : "string"
        },
        "keyType" : {
          "type" : "string"
        },
        "keyManager" : {
          "type" : "string"
        }
      }
    },
    "URLMapping" : {
      "properties" : {
        "authScheme" : {
          "type" : "string"
        },
        "throttlingPolicy" : {
          "type" : "string"
        },
        "httpMethod" : {
          "type" : "string"
        },
        "urlPattern" : {
          "type" : "string"
        },
        "scopes" : {
          "type" : "array",
          "items" : {
            "type" : "string"
          }
        }
      }
    },
    "APIList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of APIs returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/APIMetaData"
          }
        }
      },
      "title" : "API List"
    },
    "APIMetaData" : {
      "properties" : {
        "apiUUID" : {
          "type" : "string",
          "description" : "UUID of API."
        },
        "apiId" : {
          "type" : "integer"
        },
        "provider" : {
          "type" : "string",
          "description" : "API Provider name."
        },
        "name" : {
          "type" : "string",
          "description" : "Name of the API"
        },
        "version" : {
          "type" : "string",
          "description" : "Version of the API."
        },
        "context" : {
          "type" : "string",
          "description" : "Context of the API."
        },
        "policy" : {
          "type" : "string",
          "description" : "API level throttling policy."
        },
        "apiType" : {
          "type" : "string",
          "example" : "APIProduct",
          "description" : "Type of the API."
        },
        "isDefaultVersion" : {
          "type" : "boolean",
          "example" : false,
          "description" : "Whether this is the default version of the API."
        }
      }
    },
    "ApplicationList" : {
      "properties" : {
        "count" : {
          "type" : "integer",
          "example" : 1,
          "description" : "Number of Applications returned.\n"
        },
        "list" : {
          "type" : "array",
          "items" : {
            "$ref" : "#/definitions/ApplicationInfo"
          }
        }
      },
      "title" : "Application List"
    },
    "Subscription" : {
      "properties" : {
        "subscriptionId" : {
          "type" : "integer"
        },
        "policyId" : {
          "type" : "string"
        },
        "apiId" : {
          "type" : "integer"
        },
        "appId" : {
          "type" : "integer"
        },
        "subscriptionState" : {
          "type" : "string"
        }
      }
    },
    "DeployResponse" : {
      "required" : [ "deployStatus" ],
      "properties" : {
        "deployStatus" : {
          "type" : "string",
          "example" : "DEPLOYED",
          "description" : "This attribute declares whether deployment task is successful or failed.\n",
          "enum" : [ "DEPLOYED", "UNDEPLOYED", "ERROR" ]
        },
        "message" : {
          "type" : "string",
          "description" : "Attributes that returned after the API deployment\n"
        }
      },
      "title" : "Deploy API Response"
    },
    "API" : {
      "properties" : {
        "api" : {
          "type" : "string",
          "description" : "The synapse definition of the API\n"
        }
      },
      "title" : "API Definition Response"
    },
    "Endpoints" : {
      "properties" : {
        "deployedEndpoints" : {
          "type" : "array",
          "description" : "The end points which has been deployed in the gateway\n",
          "items" : {
            "type" : "string"
          }
        },
        "notdeployedEndpoints" : {
          "type" : "array",
          "description" : "The end points which has not been deployed in the gateway\n",
          "items" : {
            "type" : "string"
          }
        }
      },
      "title" : "Endpoints Response"
    },
    "Sequences" : {
      "properties" : {
        "deployedSequences" : {
          "type" : "array",
          "description" : "The sequences which has been deployed in the gateway\n",
          "items" : {
            "type" : "string",
            "example" : "<sequence xmlns=\"http://ws.apache.org/ns/synapse\" name=\"PizzaShackAPI--v1.0.0_APIproductionEndpoint\"><http uri-template=\"https://localhost:9443/am/sample/pizzashack/v1/api/\"><timeout><responseAction>fault</responseAction></timeout></http><property name=\"ENDPOINT_ADDRESS\" value=\"https://localhost:9443/am/sample/pizzashack/v1/api/\"/></sequnce>"
          }
        },
        "notdeployedSequences" : {
          "type" : "array",
          "description" : "The sequences which has not been deployed in the gateway\n",
          "items" : {
            "type" : "string",
            "example" : "<sequence xmlns=\"http://ws.apache.org/ns/synapse\" name=\"PizzaShackAPI--v1.0.0_APIproductionEndpoint\"><http uri-template=\"https://localhost:9443/am/sample/pizzashack/v1/api/\"><timeout><responseAction>fault</responseAction></timeout></http><property name=\"ENDPOINT_ADDRESS\" value=\"https://localhost:9443/am/sample/pizzashack/v1/api/\"/></sequnce>"
          }
        }
      },
      "title" : "Sequences Response"
    },
    "LocalEntry" : {
      "properties" : {
        "deployedLocalEntries" : {
          "type" : "array",
          "description" : "The local entries which has been deployed in the gateway\n",
          "items" : {
            "type" : "string",
            "example" : "<localEntry xmlns=\"http://ws.apache.org/ns/synapse\" key=\"ga-config-key\" type=\"1\"><GoogleAnalyticsTracking xmlns=\"\">\n\t<!--Enable/Disable Google Analytics Tracking -->\n\t<Enabled>false</Enabled>\n\n\t<!-- Google Analytics Tracking ID -->\n\t<TrackingID>UA-XXXXXXXX-X</TrackingID>\n\n</GoogleAnalyticsTracking></localEntry>"
          }
        },
        "notdeployedLocalEntries" : {
          "type" : "array",
          "description" : "The local entries which has not been deployed in the gateway\n",
          "items" : {
            "type" : "string",
            "example" : "<localEntry xmlns=\"http://ws.apache.org/ns/synapse\" key=\"ga-config-key\" type=\"1\"><GoogleAnalyticsTracking xmlns=\"\">\n\t<!--Enable/Disable Google Analytics Tracking -->\n\t<Enabled>false</Enabled>\n\n\t<!-- Google Analytics Tracking ID -->\n\t<TrackingID>UA-XXXXXXXX-X</TrackingID>\n\n</GoogleAnalyticsTracking></localEntry>"
          }
        }
      },
      "title" : "LocalEntry Response"
    },
    "Error" : {
      "required" : [ "code", "message" ],
      "properties" : {
        "code" : {
          "type" : "integer",
          "format" : "int64",
          "description" : "Error code"
        },
        "message" : {
          "type" : "string",
          "description" : "Error message."
        },
        "description" : {
          "type" : "string",
          "description" : "A detail description about the error message.\n"
        },
        "moreInfo" : {
          "type" : "string",
          "description" : "Preferably an url with more details about the error.\n"
        },
        "error" : {
          "type" : "array",
          "description" : "If there are more than one error list them out.\nFor example, list out validation errors by each field.\n",
          "items" : {
            "$ref" : "#/definitions/ErrorListItem"
          }
        }
      },
      "title" : "Error object returned with 4XX HTTP status"
    },
    "ErrorListItem" : {
      "required" : [ "code", "message" ],
      "properties" : {
        "code" : {
          "type" : "string",
          "description" : "Error code"
        },
        "message" : {
          "type" : "string",
          "description" : "Description about individual errors occurred\n"
        }
      },
      "title" : "Description of individual errors that may have occurred during a request."
    }
  },
  "responses" : {
    "BadRequest" : {
      "description" : "Bad Request. Invalid request or validation error.",
      "examples" : {
        "application/json" : {
          "code" : 400,
          "message" : "Bad Request",
          "description" : "Invalid request or validation error",
          "moreInfo" : "",
          "error" : [ ]
        }
      },
      "schema" : {
        "$ref" : "#/definitions/Error"
      }
    },
    "NotFound" : {
      "description" : "Not Found. The specified resource does not exist.",
      "examples" : {
        "application/json" : {
          "code" : 404,
          "message" : "Not Found",
          "description" : "The specified resource does not exist",
          "moreInfo" : "",
          "error" : [ ]
        }
      },
      "schema" : {
        "$ref" : "#/definitions/Error"
      }
    }
  }
}